# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import chat_pb2 as chat__pb2


class ChatStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ChatSession = channel.stream_stream(
        '/Chat/ChatSession',
        request_serializer=chat__pb2.ChatMsg.SerializeToString,
        response_deserializer=chat__pb2.ChatMsg.FromString,
        )


class ChatServicer(object):

  def ChatSession(self, request_iterator, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ChatServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ChatSession': grpc.stream_stream_rpc_method_handler(
          servicer.ChatSession,
          request_deserializer=chat__pb2.ChatMsg.FromString,
          response_serializer=chat__pb2.ChatMsg.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Chat', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
